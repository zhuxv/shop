<?php

namespace App\Models\Admin\Admin;

use App\Models\Admin\Models;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletes;
use App\Observers\Admin\Admin\AdminObserver;

class Admin extends Models
{
    use SoftDeletes;

    /**
     * 追加到模型数组表单的访问器
     * @var array
     */
    protected $appends = ['type_text'];

    /**
     * 模型的「booted」方法
     *
     * @return void
     */
    protected static function booted()
    {
//        static::addGlobalScope('statuc', function(Builder $builder){
//            $builder->where('status', 0);
//        });
        // TODO: Change the autogenerated stub
        static::observe(AdminObserver::class);
    }

    /**
     * 数据模型的启动方法
     *
     * @return void
     */
    protected static function boot()
    {
        parent::boot();
    }

    /**
     * 只查询状态为0的
     *
     * @param  \Illuminate\Database\Eloquent\Builder  $query
     * @param int $status
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeStatus( $query, int $status )
    {
        return $query->where('status', $status);
    }

    /**
     * 获取管理员状态
     *
     * @return string
     */
    public function getStatusTextAttribute()
    {
        return config('database.field_options.admins.status')[$this->status];
    }

    /**
     * 获取管理员类型
     *
     * @return string
     */
    public function getTypeTextAttribute()
    {
        return config('database.field_options.admins.type')[$this->type];
    }

    /**
     * 设置管理员密码
     *
     * @param string $value
     * @return void
     */
    public function setPasswordAttribute( $value )
    {
        $this->attributes['password'] = $value;
    }

    /**
     * 获取URL
     * @param array $params 路由参数
     * @return string
     */
    public function link( array $params )
    {
        $params = array_merge([$this->id], $params);
        return route('admin.administrator.admins', $params);
    }

}
